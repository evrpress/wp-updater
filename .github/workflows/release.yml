---
name: 'Create Release'

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

permissions: write-all
jobs:
  create-release:
    name: 'Create Release'
    runs-on: 'ubuntu-22.04'

    outputs:
      version: ${{ steps.read_version.outputs.version }}
      zip_name: ${{ steps.zip_project.outputs.zip_name }}

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🤔 Read version and project name from composer.json
        id: read_version
        run: |
          VERSION=$(grep -o '"version": *"[^"]*"' composer.json | cut -d'"' -f4)
          PROJECT_NAME=$(grep -o '"name": *"[^"]*"' composer.json | cut -d'"' -f4)
          # Extract the part after the slash (if any)
          if [[ "$PROJECT_NAME" == *"/"* ]]; then
            PROJECT_NAME=$(echo "$PROJECT_NAME" | cut -d'/' -f2)
          fi
          echo "Version is $VERSION"
          echo "Project name is $PROJECT_NAME"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT

      - name: 🤞 Install dependencies
        run: |
          [ -f "package.json" ] && npm install --no-fund --silent || echo "No package.json file found"
          [ -f "composer.json" ] && (composer self-update && composer install --no-dev --quiet) || echo "No composer.json file found"

      - name: 📚 Convert Readme.md to WordPress Readme
        uses: everpress-co/action-md2wp@main

      - name: 🧹 Cleanup
        run: |
          echo "Cleanup"
          rm -f README.md

      - name: 🗜️ Zip the contents of the dist directory with project name and version
        id: zip_project
        run: |
          ZIP_NAME="${{ steps.read_version.outputs.project_name }}.zip"
          # zip the current directory
          ls -la
          # Create a temporary gitignore file that includes the .github folder
          echo ".github/" >> .gitignoretemp
          # Append the existing .gitignore file if it exists
          if [ -f ".gitignore" ]; then
            cat .gitignore >> .gitignoretemp
          fi
          # Zip all files except those listed in the temporary gitignore
          zip -r $ZIP_NAME . -x@.gitignoretemp
          # Remove the temporary gitignore file
          rm .gitignoretemp
          echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT
          #unzip into dist for WordPress Plugin Deploy

      - name: 📦 Create Release
        if: ${{ !env.ACT }}
        uses: 'marvinpinto/action-automatic-releases@v1.2.1'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          automatic_release_tag: ${{ steps.read_version.outputs.version }}
          files: |
            ${{ steps.read_version.outputs.project_name }}.zip
